name: 'Create Jira issue check'
on:
    issues:
        types: [opened]
    pull_request:
        types: [opened]

jobs:
    create-issue:
        name: Create Jira issue
        runs-on: ubuntu-latest
        steps:
            # Jira 로그인
            - name: Login
              uses: atlassian/gajira-login@v3
              env:
                  JIRA_BASE_URL: ${{ secrets.JIRA_BASE_URL }}
                  JIRA_API_TOKEN: ${{ secrets.JIRA_API_TOKEN }}
                  JIRA_USER_EMAIL: ${{ secrets.JIRA_USER_EMAIL }}

            # 제목 기반으로 Issue Type 판별
            - name: Determine Issue Type
              id: determine-type
              run: |
                  if [[ "${{ github.event.issue.title }}" =~ ^\[Feature\] ]]; then
                      echo "type=Task" >> $GITHUB_ENV
                  elif [[ "${{ github.event.issue.title }}" =~ ^\[Bug\] ]]; then
                      echo "type=Bug" >> $GITHUB_ENV
                  else
                      echo "Error: Issue title must start with [Feature] or [Bug]." >&2
                      exit 1
              shell: bash

            # Markdown을 Jira 형식으로 변환
            - name: Convert markdown to Jira Syntax
              uses: peter-evans/jira2md@v1
              id: md2jira
              with:
                  input-text: |
                      ### Github Issue Link
                      - ${{ github.event.issue.html_url }}

                      ${{ github.event.issue.body }}
                  mode: md2jira

            # Jira Issue 생성
            - name: Create Issue
              id: create
              uses: atlassian/gajira-create@v3
              with:
                  project: PET
                  issuetype: '${{ env.type }}' # 동적으로 설정된 Issue Type
                  summary: '${{ github.event.issue.title }}'
                  description: '${{ steps.md2jira.outputs.output-text }}'
                  fields: |
                      {
                        "parent": {
                          "key": "${{ steps.issue-parser.outputs.issueparser_parentKey }}"
                        }
                      }

            # 생성된 이슈 정보 로깅
            - name: Log created issue
              run: echo "Jira Issue Type: ${{ env.type }}; Jira Key: ${{ steps.create.outputs.issue }}"
